<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 兔子的咖啡馆</title><link>/categories/linux/</link><description>Recent content in Linux on 兔子的咖啡馆</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 31 Jan 2020 19:38:20 +0800</lastBuildDate><atom:link href="/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux常用命令</title><link>/2020/01/31/linux-common-commands/</link><pubDate>Fri, 31 Jan 2020 19:38:20 +0800</pubDate><guid>/2020/01/31/linux-common-commands/</guid><description>简介 本人常用的Linux发行版包括Debian（stable）、Arch Linux，且系统的包都保持最新。若有命令变动，本文会持续更新。
服务器运维相关 权限管理 工具 日志 开发机运维相关 用户运行环境 1. 关闭用户图形界面 sudo systemctl set-default multi-user.target 2. 开启用户图形界面 sudo systemctl set-default graphical.targe 编程环境 Golang 模块名应带上地址（如：github.com/rabbee/leetcode）若地址不能通过https访问，模块名后需要加上后缀.git
1. 通过 go env 设置环境变量 # 设置代理 go env -w GOPROXY=&amp;#34;https://goproxy.cn,direct&amp;#34; # 设置私有库 (可选) export PRIVATE_LIB=&amp;#34;git.rabbee.cn&amp;#34; go env -w GOPRIVATE=$PRIVATE_LIB # 强制Git使用ssh而不是https访问私有库（当你的私有库无法通过https访问的时候启用） git config --global url.&amp;#34;git@$PRIVATE_LIB:&amp;#34;.insteadOf &amp;#34;https://$PRIVATE_LIB/&amp;#34; 2. 初始化一个新的 go mod 项目 # 新建目录 mkdir project1 &amp;amp;&amp;amp; cd project1 # 新建go.mod文件 go mod init {模块名} # 编写代码后，运行tidy命令 go mod tidy 3.</description></item></channel></rss>